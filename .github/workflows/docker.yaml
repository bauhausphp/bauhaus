name: Docker
on: push

defaults:
  run:
    shell: bash
    working-directory: docker

jobs:
  build:
    name: Build release condidate image
    runs-on: ubuntu-latest
    outputs:
      compare: ${{ steps.compare.outputs.compare }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Pull latest image
      run: make pull tag=latest
    - name: Build new image
      run: make build tag=RC
    - name: Compare images
      id: compare
      run: echo "::set-output name=compare::$(make compare tag1=RC tag2=latest)"
    #- uses: actions/upload-artifact@v2
    #  with:
    #   name: new-image
    #   path: docker/new-image.tar

  test-output:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - run: echo '${{ toJSON(needs.build.outputs) }}'





  #tests:
  #  name: Tests packages
  #  runs-on: ubuntu-latest
  #  steps:
  #  - name: Checkout
  #    uses: actions/checkout@v2
  #  - name: Build
  #    run: make -C docker build tag=RC
  #  - name: Test all packages
  #    run: |
  #      for p in $(cat ./published-packages.txt); do
  #        make setup package=$p
  #        make tests tag=RC package=$p
  #      done

  #publish:
  #  name: Publish new docker image
  #  runs-on: ubuntu-latest
  #  #if: ${{ github.ref == 'refs/heads/main' }}
  #  needs:
  #  - tests
  #  steps:
  #  - name: Checkout
  #    uses: actions/checkout@v2
  #  - name: Build
  #    run: make -C docker build
  #  - name: Login
  #    run: make -C docker login username=fefas password=${{ secrets.GHRC_TOKEN }}
  #  #- name: Push
  #  #  run: make -C docker push
